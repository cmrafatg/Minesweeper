#BlueJ class context
comment0.target=Minesweeper
comment0.text=\n\ This\ is\ the\ class\ Minesweeper\ and\ it\ handles\ the\ functionality\ and\ logic\ of\ the\ game.\n\ It\ is\ a\ complex\ class\ that\ deals\ with\ all\ the\ logic\ and\ checking\ the\ conditions\ for\ the\ game\n\ while\ processing\ the\ user\ inputs.\n\ \n\ @autor\ Lauren\ Scott\ and\ Mircea-Rafael\ Crsmar\n\ @version\ Student\ Final\ Code\n
comment1.params=
comment1.target=Minesweeper()
comment1.text=\n\ Giving\ we\ need\ to\ initialize\ games\ from\ level\ 1\ when\ we\ start\ the\ game\n\ and\ level\ 2\ or\ 3\ as\ we\ progress\ we\ have\ a\ default\ constructor.\n
comment10.params=
comment10.target=java.lang.String\ checkWin()
comment10.text=\n\ This\ method\ checks\ whether\ the\ game\ has\ been\ won\n\ @return\ whether\ the\ game\ has\ been\ won\n
comment11.params=
comment11.target=void\ changeLevel()
comment11.text=\n\ \n\ Changes\ the\ game\ to\ the\ next\ difficulty.\n
comment12.params=
comment12.target=void\ resetLives()
comment12.text=\n\ Resets\ the\ number\ of\ lives\ to\ the\ initial\ value\ of\ 3.\n
comment13.params=row\ col\ guess
comment13.target=java.lang.String\ makeMove(java.lang.String,\ java.lang.String,\ java.lang.String)
comment13.text=\n\ This\ method\ allows\ a\ user\ to\ make\ a\ move\ in\ the\ game\n\ @param\ row\ -\ the\ row\ of\ the\ move\n\ @param\ col\ -\ the\ column\ of\ the\ move\n\ @param\ guess\ -\ the\ guess\ they\ are\ making\n\ @return\ the\ result\ of\ the\ move\n
comment14.params=row\ col
comment14.target=java.lang.String\ getCellState(int,\ int)
comment14.text=\n\ This\ method\ gets\ the\ current\ state\ of\ an\ individual\ cell\n\ @param\ row\ -\ the\ row\ of\ the\ cell\n\ @param\ col\ -\ the\ column\ of\ the\ cell\n\ @return\ the\ state\ of\ the\ cell\n
comment15.params=
comment15.target=int\ getLives()
comment15.text=\n\ This\ method\ gets\ the\ current\ number\ of\ lives\n\ @return\ the\ number\ of\ lives\n
comment16.params=lives
comment16.target=void\ setLives(int)
comment16.text=\n\ Sets\ the\ number\ of\ lives.\n\ @param\ lives\ the\ number\ of\ lives\ to\ set\n
comment17.params=row\ col\ wasBomb
comment17.target=void\ undoMove(int,\ int,\ boolean)
comment17.text=\n\ This\ metods\ is\ used\ to\ undo\ the\ last\ move\ made.\n\ @param\ row\ the\ row\ of\ the\ cell\ to\ undo\n\ @param\ col\ the\ column\ of\ the\ cell\ to\ undo\n\ @param\ wasBomb\ whether\ the\ cell\ was\ a\ bomb\n
comment18.params=
comment18.target=java.lang.String\ getLevel()
comment18.text=\n\ Gets\ the\ game\ level\ fil.\n\ @return\ the\ current\ level\ file\n
comment19.params=level
comment19.target=void\ resetGame(java.lang.String)
comment19.text=\n\ Resets\ the\ game\ with\ a\ level\ file\n\ @param\ level\ the\ level\ file\ to\ reset\ the\ game\ with\n
comment2.params=level
comment2.target=Minesweeper(java.lang.String)
comment2.text=\n\ Another\ constructor\ which\ takes\ as\ a\ parameter\ the\ level\ we\ want\ to\ initialize.\n\ @param\ level\ The\ level\ file\ to\ load.\n
comment3.params=
comment3.target=void\ initializeGame()
comment3.text=\n\ Initializes\ the\ game\ by\ reading\ the\ level\ file,\ \n
comment4.params=
comment4.target=void\ initializePlayerBoard()
comment4.text=\n\ Initializes\ the\ player\ board\ by\ creating\ a\ slot\ object\ for\ every\ cell\ in\ the\ grid.\n\ It\ initializes\ the\ state\ of\ the\ cell\ to\ "".\n
comment5.params=
comment5.target=Slot[][]\ getMoves()
comment5.text=\n\ @return\ the\ moves\ in\ the\ game\n
comment6.params=row\ col
comment6.target=java.lang.String\ getIndividualMove(int,\ int)
comment6.text=\n\ This\ method\ gets\ an\ individual\ cell's\ state\n\ @param\ row\ -\ the\ row\ of\ the\ move\n\ @param\ col\ -\ the\ column\ of\ the\ move\n\ @return\ The\ state\ of\ that\ cell\n
comment7.params=
comment7.target=int\ calculateGameSize()
comment7.text=\n\ This\ method\ reads\ the\ game\ size\ from\ the\ file\ \n\ @return\ the\ size\ of\ the\ puzzle\n
comment8.params=
comment8.target=int\ getGameSize()
comment8.text=\n\ This\ method\ provides\ access\ to\ the\ gameSize\ from\ other\ classes\n\ @return\ the\ size\ of\ the\ puzzle\n
comment9.params=
comment9.target=java.lang.String[][]\ readLevelFile()
comment9.text=\n\ This\ method\ reads\ the\ level\ file\ to\ populate\ the\ game\n\ @return\ The\ moves\ stored\ in\ the\ file\n
numComments=20
